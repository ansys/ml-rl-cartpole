name: Documentation Build

on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION: '3.9'
  ON_CI: True
  ON_REMOTE: TRUE
  ON_UBUNTU: TRUE
  MAPDL_IMAGE: ghcr.io/ansys/pymapdl/mapdl:v22.2-ubuntu
  PYMAPDL_PORT: 21000  # default won't work on GitHub runners
  PYMAPDL_DB_PORT: 21001  # default won't work on GitHub runners
  PYMAPDL_START_INSTANCE: FALSE

jobs:

  code-style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip tox
      - name: Test with tox
        run: tox -e style

  testing:
    name: "Testing"
    runs-on: ubuntu-latest
    needs: [code-style]
    steps:
      - name: "Install Git and checkout project"
        uses: actions/checkout@v3

      - name: "Setup Python"
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Update OS
        run: |
          sudo apt update
      
      - name: Install tests requirements
        run: |
          pip install -r requirements/requirements_tests.txt --disable-pip-version-check
          # To fix no kernel named python3
          pip install --upgrade pip ipython ipykernel
          ipython kernel install --name "python3" --user
      
      - name: "Login in Github container registry"
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ secrets.BOT_APPLICATION_ID }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Pull, launch, and validate MAPDL service"
        run: .ci/start_mapdl.sh
        env:
          LICENSE_SERVER: ${{ secrets.LICENSE_SERVER }}

      - name: Running tests
        env:
          PYMAPDL_START_INSTANCE: false
        run: |
          pytest -s

  docs_build:
    name: "Documentation building"
    runs-on: ubuntu-latest
    needs: [code-style]
    steps:
      - name: "Install Git and checkout project"
        uses: actions/checkout@v3

      - name: "Setup Python"
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Install doc requirements
        run: |
          sudo apt update
          sudo apt-get install -y texlive-latex-extra latexmk
          pip install -r requirements/requirements_docs.txt --disable-pip-version-check

      - name: Build HTML Documentation
        run: |
          make -C doc html SPHINXOPTS="-W"
          touch doc/build/html/.nojekyll
  
      # - name: Build PDF Documentation
      #   run: make -C doc latexpdf

      - name: Upload HTML Documentation
        uses: actions/upload-artifact@v3
        with:
          name: Documentation
          path: doc/build/html
          retention-days: 7

      # - name: Upload PDF Documentation
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: Documentation
      #     path: doc/build/latex/*.pdf
      #     retention-days: 7

      - name: Deploy to gh-pages
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages
          folder: doc/build/html
          clean: true
          single-commit: true

  # Release:
  #   if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
  #   needs: docs_build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Set up Python
  #       uses: actions/setup-python@v1
  #       with:
  #         python-version: 3.9

  #     - uses: actions/download-artifact@v2

  #     - name: Display structure of downloaded files
  #       run: ls -R

  #     - name: Release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         files: |
  #           ./**/*.pdf
